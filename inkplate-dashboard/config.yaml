name: Lovelace Inkplate Dashboard
version: 1.0.14
slug: inkplate-dashboard
description: This tool can be used to display a Lovelace view of your Home Assistant instance on an e-ink device. It regularly takes a screenshot which can be polled and used as a screensaver image.
startup: application
boot: auto
arch:
  - aarch64
  - amd64
  - armv7
url: 'https://github.com/cromulus/hass-lovelace-inkplate-dashboard'
image: 'cromulus/hass-lovelace-inkplate-dashboard-{arch}'
webui: 'http://[HOST]:[PORT:5000]'
ingress: true
ingress_port: 5000
ports:
  5000/tcp: 5000
ports_description:
  5000/tcp: 'Node Webserver hosting rendered image'
map:
  - media:rw
watchdog: 'http://[HOST]:[PORT:5000]/'
init: false
options:
  HA_BASE_URL: 'https://your-path-to-home-assistant:8123'
  HA_SCREENSHOT_URL: '/lovelace/0'
  HA_ACCESS_TOKEN: ''
  LANGUAGE: 'en'
  CRON_JOB: '* * * * *'
  RENDERING_TIMEOUT: '60000'
  RENDERING_DELAY: '0'
  RENDERING_SCREEN_HEIGHT: '800'
  RENDERING_SCREEN_WIDTH: '600'
  BROWSER_LAUNCH_TIMEOUT: '30000'
  ROTATION: '0'
  SCALING: '1'
  GRAYSCALE_DEPTH: '8'
  IMAGE_FORMAT: 'png'
  COLOR_MODE: 'GrayScale'
  REMOVE_GAMMA: true
  PREFERS_COLOR_SCHEME: 'light'
  SATURATION: 1
  CONTRAST: 1
  SHARPEN: ''
  DITHER: true
  DITHER_ALGO: 'Riemersma'
  BLACK_LEVEL: '0%'
  WHITE_LEVEL: '100%'
  ADDITIONAL_ENV_VARS: []
  MQTT_HOST: 'core-mosquitto'
  MQTT_PORT: 1883
  MQTT_USER: 'homeassistant'
  MQTT_PASSWORD: ''
  MQTT_PROTOCOL: '4'
schema:
  HA_BASE_URL:
    type: url
    description: "Base URL of your Home Assistant instance."
  HA_SCREENSHOT_URL:
    type: str
    description: "Relative URL to take the screenshot of."
  HA_ACCESS_TOKEN:
    type: password
    description: "Long-lived access token from Home Assistant."
  LANGUAGE:
    type: str?
    description: "Language to set in the browser and Home Assistant."
  CRON_JOB:
    type: str?
    description: "Cron job expression for how often to take a screenshot."
  RENDERING_TIMEOUT:
    type: int?
    description: "Timeout in milliseconds for the rendering process."
  RENDERING_DELAY:
    type: int?
    description: "Delay in milliseconds between navigating to the page and taking the screenshot."
  RENDERING_SCREEN_HEIGHT:
    type: int?
    description: "Height of your e-ink screen resolution."
  RENDERING_SCREEN_WIDTH:
    type: int?
    description: "Width of your e-ink screen resolution."
  BROWSER_LAUNCH_TIMEOUT:
    type: int?
    description: "Timeout in milliseconds for launching the browser."
  ROTATION:
    type: int?
    description: "Rotation of the image in degrees (e.g., 90, 180, 270)."
  SCALING:
    type: float?
    description: "Scaling factor (e.g., 1.5 to zoom in)."
  GRAYSCALE_DEPTH:
    type: int?
    description: "Grayscale bit depth (e.g., 8 for 8-bit, which is 256 shades of gray)."
  IMAGE_FORMAT:
    type: "list(png|jpeg|bmp)?"
    description: "Format for the generated images."
  COLOR_MODE:
    type: "list(GrayScale|TrueColor)?"
    description: "Color mode to use for the image."
  REMOVE_GAMMA:
    type: bool?
    description: "Remove gamma correction from the image."
  PREFERS_COLOR_SCHEME:
    type: "list(light|dark)?"
    description: "Enable browser dark mode."
  SATURATION:
    type: int?
    description: "Saturation level multiplier."
  CONTRAST:
    type: int?
    description: "Contrast level multiplier."
  SHARPEN:
    type: str?
    description: "Sharpening parameters for the image."
  DITHER:
    type: bool?
    description: "Apply a dither to the images."
  DITHER_ALGO:
    type: "list(Riemersma|FloydSteinberg|None)?"
    description: "Dithering algorithm to use."
  BLACK_LEVEL:
    type: str?
    description: "Black point as a percentage (e.g., 30%)."
  WHITE_LEVEL:
    type: str?
    description: "White point as a percentage (e.g., 90%)."
  ADDITIONAL_ENV_VARS:
    type:
      - name: str
        value: str
    description: "Additional environment variables to set."
  MQTT_HOST:
    type: str?
    description: "MQTT broker hostname."
  MQTT_PORT:
    type: int?
    description: "MQTT broker port."
  MQTT_USER:
    type: str?
    description: "MQTT username."
  MQTT_PASSWORD:
    type: password?
    description: "MQTT password."
  MQTT_PROTOCOL:
    type: "list(4|5.0)?"
    description: "MQTT protocol version."
services:
  - mqtt:want
environment:
  output_path: "/output/cover"
